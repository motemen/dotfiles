[color]
    diff = auto
    status = auto
    branch = auto
    grep = auto
[color "diff"]
#	whitespace = normal
[color "grep"]
    function = blue
#	match = reverse yellow
    filename = cyan
    linenumber = yellow
    separator = white
[user]
	email = motemen@gmail.com
	name = Hironao OTSUBO
    homepage = https://motemen.works/
[alias]
    st = status --short --branch . # --ignore-submodules=dirty .
    co = checkout
    com = "!f() { remote_head=$(git symbolic-ref --quiet refs/remotes/origin/HEAD); remote_head=${remote_head#refs/remotes/origin/}; git checkout ${remote_head:-$(git rev-parse --symbolic --verify --quiet main || git rev-parse --symbolic --verify --quiet master)}; }; f"
    ci = commit -v
    di = diff
    dc = diff --cached
    dd = -c pager.diff=delta diff
    br = branch
    lg = log --decorate --graph --abbrev-commit --pretty=oneline
    # r = recent-branches --no-merged
    # r = !git reflog | head -n 200 | PLENV_VERSION=system perl -anal -e '$seen{$1}++ or print $1 if /checkout:.*to (.+)/'
    r = !git reflog -n 50 --pretty='format:%gs' | perl -anal -e '$seen{$1}++ or print $1 if /checkout:.*to (.+)/'
    rr = "!f() { git for-each-ref --sort=-committerdate 'refs/heads/' --format '%(refname)' | while read s; do git --no-pager log -1 --color --decorate=short --decorate-refs=refs/heads -1 --pretty='format:%C(yellow)%D%Creset  %s %Cgreen%ar%Creset%n' \"$s\"; done }; f"
    psuh = push
    o = browse-remote
    pr = browse-remote --pr
    ls-others = ls-files --others --exclude-standard
    pr-branch = "!f() { git ls-remote --heads origin | fgrep \"$(git ls-remote origin \"refs/pull/$1/head\" | cut -f1)\" | cut -f2 | sed 's:^refs/heads/::'; }; f"
    co-pr = "!f() { git checkout \"$(git pr-branch \"$1\")\"; }; f"
    when-merged = "!f() { git rev-list --reverse --ancestry-path --merges $1.. | head -1; }; f"
    u = remote update
    sel-revision = !git log --oneline -50 | fzf | cut -f1 -d' '
    fixit = "!f () { if [ \"$#\" -eq 0 ] && git diff --cached --quiet; then git commit --amend --reset-author; else git commit --amend --no-edit --reset-author \"$@\"; fi; }; f"
    sha = "!f() { git rev-parse \"${1-HEAD}\"; }; f"
    tig = !tig
    su = !env PLENV_VERSION=system git shared-submodule-update --init
    pu = pull --prune
    clean-local = "!f() { git for-each-ref --merged HEAD --no-contains HEAD 'refs/heads/**' --format '%(refname)' | while read s; do echo \"$s\t$(git rev-parse \"$s\")\"; git update-ref -d \"$s\"; done }; f"
[core]
	excludesfile = ~/.gitignore
#	whitespace = nowarn
#	pager = less --quit-if-one-screen --RAW-CONTROL-CHARS --no-init
# pager = less -+$LESS -FRX
[core]
	symlinks = false
	quotepath = false
    # pager = delta --width=variable
# [interactive]
#     diffFilter = delta --width=variable
# [pager]
# # contrib/diff-highlight/diff-highlight
#     log  = diff-highlight | less -+$LESS -FRX
#     show = diff-highlight | less -+$LESS -FRX
#     diff = diff-highlight | less -+$LESS -FRX
[push]
    default = current
[apply]
#	whitespace = nowarn
[help]
#	autocorrect = 4
[diff]
    ignoreSubmodules = dirty
    submodule = log
    algorithm = patience
    wordRegex = [[:alnum:]]+|[^[:space:]]
    renames = copies
    tool = vimdiff
    mnemonicprefix
    # noprefix
[diff "gzip"]
    textconv = gzcat
[diff "gz"]
    textconv = gzcat
[difftool "icdiff"]
    cmd = icdiff $LOCAL $REMOTE
[diff "cartonlock"]
    textconv = "perl -MJSON -0e \"\\$m = eval { decode_json(<>)->{modules} }; print qq(\\$_~\\$m->{\\$_}->{version}\\n) for sort keys %\\$m\""
[branch]
    autosetuprebase = always
[web]
    browser = open
[merge]
    ff = false
    # conflictstyle = diff3
    tool = vimdiff
    verbosity = 5
[gc]
    auto = 0
[filetype "compressed"]
    binary = true
[pull]
    rebase = preserve
[include]
    path = ~/.gitconfig.local
[interactive]
    singlekey = true
[url "git@github.com:motemen/"]
    pushInsteadOf = https://github.com/motemen/
    insteadOf = https://github.com/motemen/
[url "git@gist.github.com:"]
    pushInsteadOf = https://gist.github.com/motemen/
[advice]
    detachedHead = false
[ghq]
    root = ~/dev/go/src
    root = ~/dev/src
[ghq "import"]
    pocket = !pocket list --domain github.com --format '{{.URL}}'
    starred = !github-list-starred
[ghq "https://svn.code.sf.net"]
    vcs = git-svn
[github]
    user = motemen
[ghi]
    token = !security find-internet-password -a motemen -s github.com -l 'ghi token' -w
[browse-remote "bitbucket.org"]
    top = https://{host}/{path}
    ref = https://{host}/{path}/tree/{short_ref}
    rev = https://{host}/{path}/commit/{commit}
    file = "https://{host}/{path}/{file.directory? and :tree or :blob}/{short_rev}/{file}{lines && \"#\" + % lines.map { |l| \"#L${l}\" }.join(\"-#\")}"
# [rerere]
#     enabled = true
[rebase]
    autosquash = true
    stat = true
    autoStash = true
[log]
    follow = true
    date = iso
[http]
    cookiefile = /Users/motemen/.gitcookies
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
[browse-remote "github.com"]
	top = https://{host}/{path}
	ref = https://{host}/{path}/tree/{short_ref}
	rev = https://{host}/{path}/commit/{commit}
	pr = https://{host}/{path}/pull/{short_ref}
	file = "https://{host}/{path}/{file.directory? and :tree or :blob}/{short_rev}/{file}{lines && \"#L%s\" % lines.join(\"-L\")}"
[init]
	defaultBranch = main
[gpg]
	format = ssh
